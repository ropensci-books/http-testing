on: pull_request
  
name: PR-workflow

jobs:
  bookdown:
    name: Render Book
    env:
      GITHUB_PAT: ${{ secrets.MINE }}
    runs-on: ubuntu-latest
    steps:
      - name: Is this a fork
        run: |
          fork=$(jq --raw-output .pull_request.head.repo.fork "${GITHUB_EVENT_PATH}");echo "fork=${fork}" >> $GITHUB_ENV

      - uses: r-lib/actions/setup-tinytex@v2
        
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check
      - name: Build site
        run: |
          bookdown::render_book(".")
          htmls <- file.path(
            getwd(), 
            dir("docs", full.names = TRUE)
          )
          htmls <- htmls[grepl("\\.html$", htmls)]
          purrr::walk2(
            htmls, htmls,
            downlit::downlit_html_path,
            classes = downlit::classes_chroma()
            )
        shell: Rscript {0}
        
      - name: Render book PDF
        run: Rscript -e 'bookdown::render_book("index.Rmd", "bookdown::pdf_book", output_dir = "pdfbook")'
        
      - name: Render book EPUB
        run: Rscript -e 'bookdown::render_book("index.Rmd", "bookdown::epub_book", output_dir = "epubbook")'
       
      - name: Move files around
        if: env.fork == 'false'
        run: Rscript -e 'file.copy(from = "pdfbook/_main.pdf", to = "docs/main.pdf")' -e 'file.copy(from = "epubbook/_main.epub", to = "docs/main.epub")'

      - uses: actions/setup-node@v1
        if: env.fork == 'false'
        with:
          node-version: "12.x"
      
      - name: Install Netlify CLI
        if: env.fork == 'false'
        run: npm install netlify-cli -g
        
      - name: Deploy to Netlify (test)
        if: env.fork == 'false'
        run: DEPLOY_URL=$(netlify deploy --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --dir=docs --json | jq '.deploy_url' --raw-output);echo "DEPLOY_URL=${DEPLOY_URL}" >> $GITHUB_ENV


      - name: Update commit status
        if: env.fork == 'false'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'Accept: application/vnd.github.antiope-preview+json' \
          --header 'content-type: application/json' \
          --data '{
            "state": "success",
            "target_url": "${{ env.DEPLOY_URL }}",
            "context": "Netlify"
            }'
